services:
  redis:
    image: redis:8.2-alpine
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
      - redis_data:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --no-auth-warning -a ${REDIS_PASSWORD} ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - shared
  redis-backup:
    image: redis:8.2-alpine
    restart: unless-stopped
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      BACKUP_KEEP_DAYS: ${BACKUP_KEEP_DAYS:-7}
      SCHEDULE: ${SCHEDULE:-0 2 * * *}
      TZ: UTC
    volumes:
      - ./.local/backups:/backups:delegated
      - ./backup.sh:/backup.sh:ro
    healthcheck:
      test: ["CMD-SHELL", "test -f /tmp/backup_healthy || exit 1"]
      interval: 1h
      timeout: 30s
      retries: 3
      start_period: 5m
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    command: >
      sh -c "
        apk add --no-cache wget &&
        cp /backup.sh /usr/local/bin/backup.sh &&
        chmod +x /usr/local/bin/backup.sh &&
        /usr/local/bin/backup.sh cron"
    networks:
      - shared
    depends_on:
      redis:
        condition: service_healthy
volumes:
  redis_data:
networks:
  shared:
    driver: bridge
    external: true